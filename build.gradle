plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.11.2'
}

group 'org.example'
version '1.0-SNAPSHOT'

allure {
    report { //секция репорта
        version.set("2.19.0")
         }
    adapter { //отвечает за появление папки build/ allure-results
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set("2.19.0")
            }
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {

    testImplementation (
            'com.codeborne:selenide:6.10.1'
            ,'org.junit.jupiter:junit-jupiter:5.9.1'
            ,'org.assertj:assertj-core:3.23.1'
            ,'org.slf4j:slf4j-simple:1.7.32'
            ,'com.github.javafaker:javafaker:1.0.2'
            ,'com.codeborne:pdf-test:1.5.0'
            ,'com.codeborne:xls-test:1.4.3'
            ,'com.opencsv:opencsv:5.7.1'
            ,'com.google.code.gson:gson:2.10'
            ,'io.qameta.allure:allure-selenide:2.19.0'
            ,'io.qameta.allure:allure-rest-assured:2.21.0'
            ,'io.github.bonigarcia:webdrivermanager:5.3.1'
            ,'org.aeonbits.owner:owner:1.0.12'
            ,'io.rest-assured:rest-assured:5.3.0'
    )

    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}


test {
    useJUnitPlatform()
    systemProperties(System.getProperties())
}
sourceCompatibility = JavaVersion.VERSION_1_9
targetCompatibility = JavaVersion.VERSION_1_9
